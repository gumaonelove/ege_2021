'''
В файле 24-2.txt записана строка, состоящая из цифр от 0 до 9. Надо найти подстроку
минимальной длины, для которой выполняется условие: каждый символ подстроки
окружен цифрами с разной четностью. Причем подстроки большей длины не содержат
подстрок меньшей длины, то есть нельзя сказать, что в строке 13425269 есть искомые
подстроки длиной 1 или 2 для подстроки 342 (3, 34, 342) или подстрока длиной 1 для 26. По
условию в такой строке 2 искомых подстроки – 342 и 26. Первый и последний символы в
строке не могут быть символами искомой подстроки.
Найдите минимальную длину таких подстрок и их количество.
'''

A = open('24-2.txt', 'r').read()
lens = []
count = 0 # now len
for i in range(0, len(A)-2, 1):
    a, b = int(A[i]),  int(A[i+2])
    if (a + b)%2==1:
        # нам подходит A[i+1]
        count += 1
    else:
        if count > 0: lens.append(count)
        count = 0
        
if count > 0: lens.append(count)
print(min(lens), lens.count(3))
#print(A[i], A[i+1], A[i+2])
#print(int(A[i]) + int(A[i+2]))
