'''
(№ 2689) Имеется набор данных, состоящий из троек положительных целых чисел. Необходимо выбрать из каждой тройки два
числа так, чтобы сумма всех выбранных чисел не делилась на 5 и при этом была максимально возможной. Гарантируется,
что искомую сумму получить можно. Программа должна напечатать одно число – максимально возможную сумму, соответствующую
условиям задачи.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество троек
N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит три натуральных числа, не превышающих 10 000.
Пример входного файла:
6
8 3 4
4 8 12
9 5 6
2 8 3
12 3 5
1 4 11
Для указанных входных данных значением искомой суммы должно быть число 89.
В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.
'''
def sum_two_maximums(args):
    args.sort()
    return sum(args[-2:])

import sys
sys.stdin = open('27-29b.txt')
N = int(input())
M = 5
s = 0
raznost = []
for x in range(N):
    numbers = [int(x) for x in input().split()]
    maxi = max(numbers)
    mini = min(numbers)
    sred = sum(numbers) - maxi - mini
    s += maxi + sred
    if (maxi - mini) % 5!= 0:
        raznost += [maxi - mini]
    if (sred - mini) % 5 !=0:
        raznost += [sred - mini]

if s%5==0:
    s -= min(raznost)

print(s)
