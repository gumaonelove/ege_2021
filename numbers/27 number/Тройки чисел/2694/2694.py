'''
(№ 2694) Имеется набор данных, состоящий из троек положительных целых чисел. Необходимо выбрать из каждой тройки
два числа так, чтобы сумма всех выбранных чисел делилась на 6 и при этом была минимально возможной. Гарантируется,
что искомую сумму получить можно. Программа должна напечатать одно число – минимально возможную сумму, соответствующую
условиям задачи.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество троек
N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит три натуральных числа, не превышающих 10 000.
Пример входного файла:
6
8 3 4
4 8 12
9 5 6
2 6 5
12 3 5
1 4 12
Для указанных входных данных значением искомой суммы должно быть число 54.
В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.
'''
import sys
sys.stdin = open('27-34a.txt')
N = int(input())
M = 6
s = [0] + [None] * (M-1)

for _ in range(N):
    inputs = [int(x) for x in input().split()]
    maxi = max(inputs)
    mini = min(inputs)
    sred = sum(inputs) - mini - maxi
    numbers = [maxi + sred, maxi + mini, mini + sred]

    s_new = [None] * M
    for k in range(M):
        variants = [x + s[(k - x) % M] for x in numbers if s[(k - x) % M] is not None]
        s_new[k] = min(variants) if variants else None
    s[:] = s_new

print(s[0])