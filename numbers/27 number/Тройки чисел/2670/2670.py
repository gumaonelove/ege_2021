'''
(№ 2670) (Д.Ф. Муфаззалов) Имеется набор данных, состоящий из троек положительных целых чисел. Необходимо выбрать из
каждой тройки ровно одно число так, чтобы сумма всех выбранных чисел не делилась на 4 и при этом была максимально
возможной. Гарантируется, что искомую сумму получить можно. Программа должна напечатать одно число – максимально
возможную сумму, соответствующую условиям задачи.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество
 троек N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит три натуральных числа, не превышающих 10 000.
Пример входного файла:
6
1 3 2
5 12 12
6 8 12
5 4 12
3 3 12
1 1 13
Для указанных входных данных значением искомой суммы должно быть число 63.
В ответе укажите два числа: сначала значение искомой суммы для файла А, затем для файла B.
'''
import sys
sys.stdin = open('27-10b.txt')
N = int(input())
M = 4
s = [0] + [None] * (M - 1)
for _ in range(N):
    numbers = [int(x) for x in input().split()]
    s_new = [None] * M
    for k in range(M):
        variants = [x + s[(k-x)%M] for x in numbers if s[(k-x)%M] is not None]
        s_new[k] = max(variants) if variants else None
    s[:] = s_new

print(max(s[1:]))