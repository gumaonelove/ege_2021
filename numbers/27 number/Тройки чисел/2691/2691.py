'''
(№ 2691) Имеется набор данных, состоящий из троек положительных целых чисел. Необходимо выбрать из каждой тройки
 два числа так, чтобы сумма всех выбранных чисел не делилась на 9 и при этом была минимально возможной. Гарантируется,
 что искомую сумму получить можно. Программа должна напечатать одно число – минимально возможную сумму, соответствующую
 условиям задачи.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество троек
N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит три натуральных числа, не превышающих 10 000.
Пример входного файла:
6
8 3 4
4 8 12
9 8 11
2 8 3
12 3 5
1 4 11
Для указанных входных данных значением искомой суммы должно быть число 56.
В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.
'''
import sys
sys.stdin = open('27-31b.txt')
N = int(input())
raznost = []
s = 0
for _ in range(N):
    numbers = [int(x) for x in input().split()]
    maxi = max(numbers)
    mini = min(numbers)
    sred = sum(numbers) -  maxi - mini
    s += mini + sred
    if (maxi - mini) % 9 != 0:
        raznost += [maxi - mini]
    if (maxi - sred) % 9 != 0:
        raznost += [maxi - sred]

if s%9==0:
    s += min(raznost)

print(s)
