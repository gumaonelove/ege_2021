'''
(№ 2663) Имеется набор данных, состоящий из пар положительных целых чисел. Необходимо выбрать из каждой пары ровно одно
число так, чтобы сумма всех выбранных чисел делилась на 3 и при этом была минимально возможной. Гарантируется, что искомую
сумму получить можно. Программа должна напечатать одно число – минимально возможную сумму, соответствующую условиям задачи.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество пар N
(1 ≤ N ≤ 100000). Каждая из следующих N строк содержит два натуральных числа, не превышающих 10 000.
Пример входного файла:
6
1 3
5 11
6 9
5 4
3 3
1 1
answer = 21
'''

import sys
sys.stdin = open('27-3b.txt')
N = int(input())
M = 3
s = [0] + [None] * (M - 1)
for i in range(N):
    numbers = [int(x) for x in input().split()]
    s_new = [None] * M
    for k in range(M):
        variants = [x + s[(k - x) % M] for x in numbers if s[(k - x) % M] is not None]
        s_new[k] = min(variants) if variants else None
    s[:] = s_new

print(*s, sep='\t')
